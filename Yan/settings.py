"""
Django settings for Yan project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-962-*q91!)+(379m05=r%g&%b()j&s))d)3o#c=woxhj%&6b=f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',   
    'django.contrib.sites',   
    'sweetify',
    'accounts',
    'cust_admin',
    'cust_auth_admin',
    'store',
    'social_django',
    # 'allauth',
    # 'allauth.account',
    # 'allauth.socialaccount',
    # 'allauth.socialaccount.providers.google',
    'user_cart',
    'django_extensions',
]

SITE_ID = 1

SWEETIFY_SWEETALERT_LIBRARY = 'sweetalert2'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
    # 'allauth.account.middleware.AccountMiddleware',  # Ensure this is included
]

ROOT_URLCONF = 'Yan.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'user_cart.context_processors.cart_item_count',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]


WSGI_APPLICATION = 'Yan.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'yan',
        'USER': 'postgres',
        'PASSWORD': 'Yan@1234',
        'HOST': 'localhost',  # or IP address if hosted remotely
        'PORT': '5432', 
    }
}


AUTH_USER_MODEL = 'accounts.User'

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Define the base directory for media files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Define the URL for media files
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'amalnian@gmail.com'
EMAIL_HOST_PASSWORD = 'esfw uaoj yxpu qzwk '

# Authentication backends
# AUTHENTICATION_BACKENDS = [
#     'accounts.backends.EmailBackend',
#     'social_core.backends.google.GoogleOAuth2',
#     'django.contrib.auth.backends.ModelBackend',
# ]
# AUTHENTICATION_BACKENDS = [
    
#     'django.contrib.auth.backends.ModelBackend',

#     'allauth.account.auth_backends.AuthenticationBackend',
# ] 
AUTHENTICATION_BACKENDS = [
    'accounts.backends.EmailBackend',
    'social_core.backends.google.GoogleOAuth2',
    'django.contrib.auth.backends.ModelBackend',
]

SOCIAL_AUTH_URL_NAMESPACE = 'social'                                                                                            
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '450839854654-pj3j9cbteurjqlmsa3imos9nsu179uja.apps.googleusercontent.com' 
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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'


# Login/Logout URLs
# LOGIN_URL = 'accounts:login'
# LOGIN_REDIRECT_URL = 'store:home'
# LOGOUT_URL = 'accounts:logout'
# LOGOUT_REDIRECT_URL = 'accounts:login'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'


# SOCIAL_AUTH_GOOGLE_OAUTH2_KEY="331626663021-qer6va73hpq2e01tsk84rg08meunp993.apps.googleusercontent.com"
# SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET="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"
# SOCIAL_AUTH_GOOGLE_OAUTH2_EXTRA_DATA = [
#     ('first_name', 'first_name'),
#     ('last_name', 'last_name'),
#     ('email', 'email'),
# ]

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.user.create_user',
    'accounts.pipeline.save_user_details',  # Add this function to save user details
    'accounts.pipeline.set_user_phone_number',  # Add this function to set phone number
    'accounts.pipeline.activate_user',  # Add this function to activate user
    'accounts.pipeline.check_if_user_blocked',  # Add this function to check if user is blocked
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)


# SOCIALACCOUNT_PROVIDERS = {
#     'google': {
#         'APP': {
#             'client_id': '331626663021-0gqdkt7tom71r46j1eh4bqli7e2ntnor.apps.googleusercontent.com',
#             'secret': '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',
#             'key': '',
#         }
#     }
# }

RAZORPAY_KEY_ID = 'rzp_test_rBxYTsD18FDhzg'
RAZORPAY_KEY_SECRET = 'IP55ASWmlMiT9pgpHbGnsvC5'


SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'openid',
    'profile',
    'email'
]

SOCIAL_AUTH_GOOGLE_OAUTH2_EXTRA_DATA = [
    'first_name',
    'last_name'
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'social_django': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    },
} 

